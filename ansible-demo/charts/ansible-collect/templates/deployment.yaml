---
# ansible collect
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ansible-collect
  namespace: {{ .Release.Namespace }}
  labels:
    app: ansible-collect
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: ansible-collect
  template:
    metadata:
      labels:
        app: ansible-collect
    spec:
      containers:
        - name: ansible-collect
          image: "{{.Values.image.repository}}:{{.Values.image.tag}}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/bash
            - -c
            - |-
              tail -f /dev/null
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- with .Values.ansibleCfg }}
            - name: ansible-cfg
              mountPath: "/etc/ansible"
            {{ end }}
            {{- with .Values.ansiblePlaybooks }}
            - name: ansible-playbooks
              mountPath: "/playbooks"
            {{ end }}
            {{- with .Values.ssh }}
            {{- with printf "%s%s" .privateKey .knownHosts}}
            - name: ansible-ssh-auth
              mountPath: "/root/.ssh"
            {{ end }}
            {{ end}}
      volumes:
        {{- if printf "%s%s" .Values.ansibleCfg .Values.ansibleHosts}}
        - name: ansible-cfg
          configMap:
            name: ansible-cfg
            items:
              {{- with  .Values.ansibleHosts}}
              - key: hosts
                path: hosts
              {{ end }}
              {{- with .Values.ansibleCfg}}
              - key: ansible.cfg
                path: ansible.cfg
              {{ end }}
        {{ end }}
        {{- with .Values.ansiblePlaybooks }}
        - name: ansible-playbooks
          configMap:
            name: ansible-playbooks
        {{ end }}
        {{- with .Values.ssh }}
        {{- with printf "%s%s" .privateKey .knownHosts}}
        - name: ansible-ssh-auth
          secret:
            secretName: ansible-ssh-auth
            defaultMode: 256
            items:
              {{- with .privateKey}}
              - key: ssh-privatekey
                path: id_rsa
              {{ end }}
              {{- with .knownHosts}}
              - key: known_hosts
                path: known_hosts
              {{ end }}
      {{ end }}
      {{ end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
# ansible controller
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ansible-controller
  namespace: {{ .Release.Namespace }}
  labels:
    app: ansible-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ansible-controller
  template:
    metadata:
      name: ansible-controller
      labels:
        app: ansible-controller
    spec:
      containers:
        - name: ansible-controller
          image: {{ .Values.image.controllerRepository }}:{{.Values.image.controllerTag}}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
      restartPolicy: Always
      serviceAccountName: ansible-sa
